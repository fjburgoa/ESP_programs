/*
Programa Realizado por Javier Burgoa
Manejo del PWM
*/

#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"
#include "driver/ledc.h"

#define LED4 4
#define LED6 6

#define LEDC_MODE           LEDC_LOW_SPEED_MODE 

void app_main(void) 
{
    gpio_set_direction(LED4,GPIO_MODE_OUTPUT);
    gpio_set_direction(LED6,GPIO_MODE_OUTPUT);

    ledc_channel_config_t ledc_channel = {
        .speed_mode       = LEDC_MODE, 	
        .channel          = LEDC_CHANNEL_0,
        .timer_sel        = LEDC_TIMER_0,
        .intr_type        = LEDC_INTR_DISABLE,
        .gpio_num         = 6,   
        .duty             = 0,         // variable de tipo uint32_t y relativa a la resoluciÃ³n del timer
    };
    ledc_channel_config(&ledc_channel);

    ledc_timer_config_t ledc_timer = {
        .speed_mode       = LEDC_MODE,
        .duty_resolution  = LEDC_TIMER_10_BIT,
        .timer_num        = LEDC_TIMER_0,
        .freq_hz          = 8000,             // 8 kHz de frecuencia
        .clk_cfg          = LEDC_AUTO_CLK
    };
    ledc_timer_config(&ledc_timer);
  
    uint32_t dutycycle = 0;
  
    while (1) 
    {
        vTaskDelay(200/portTICK_PERIOD_MS); 

        ledc_set_duty(LEDC_MODE, LEDC_CHANNEL_0, dutycycle);  //copiamos el valor de la lectura ADC al led
        ledc_update_duty(LEDC_MODE, LEDC_CHANNEL_0);       

        dutycycle += 32;
        if (dutycycle>1023)
            dutycycle = 0;

    }
}