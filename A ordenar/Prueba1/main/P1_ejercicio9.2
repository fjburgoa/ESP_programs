/*
 *Programa creado por Javier Burgoa el 27/10/2024 
 *Ejemplo de lectura/escritura por el puerto serie por Polling
 */

#include <stdio.h>
#include <string.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/uart.h"
 


#define EX_UART_NUM UART_NUM_0
#define BUF_SIZE 1024

void app_main(void)
{
    /* Configure parameters of an UART driver,
     * communication pins and install the driver */
    uart_config_t uart_config = {
        .baud_rate = 115200,
        .data_bits = UART_DATA_8_BITS,
        .parity = UART_PARITY_DISABLE,
        .stop_bits = UART_STOP_BITS_1,
        .flow_ctrl = UART_HW_FLOWCTRL_DISABLE,
        .source_clk = UART_SCLK_DEFAULT,
    };
    //Install UART driver
    uart_driver_install(UART_NUM_0, BUF_SIZE , 0, 0, NULL, 0);
    uart_param_config(UART_NUM_0, &uart_config);

    //Set UART pins (using UART0 default pins ie no changes.)
    uart_set_pin(UART_NUM_0, UART_PIN_NO_CHANGE, UART_PIN_NO_CHANGE, UART_PIN_NO_CHANGE, UART_PIN_NO_CHANGE);

    uint8_t data[128];
    int length = 0;

    while(1)
    {
        vTaskDelay(10/portTICK_PERIOD_MS);
        uart_get_buffered_data_len(UART_NUM_0, (size_t*)&length);
        if (length>0)
        {
             length = uart_read_bytes(UART_NUM_0, data, length, 100);  
             uart_write_bytes(UART_NUM_0,"recibido: ", sizeof("recibido: ")); 
             uart_write_bytes(UART_NUM_0,data,length); 
        }
    }
}